- name: Include OS-specific variables
  ansible.builtin.include_vars: '{{ ansible_os_family }}.yml'

- name: Install dependencies
  become: true
  ansible.builtin.package:
    name:
      - unzip
    state: present
  when: ansible_os_family != 'Darwin'

- name: Install dependencies (OSX)
  when: ansible_os_family == 'Darwin'
  block:
    - name: Find brew binary
      ansible.builtin.command: which brew
      register: brew_which
      changed_when: false
    - name: Get owner of brew binary
      ansible.builtin.stat:
        path: "{{ brew_which.stdout }}"
      register: brew_stat
    - name: "Install package"
      community.general.homebrew:
        name:
          - "{{ openjdk_pkg }}"
          - unzip
        state: present
        update_homebrew: false
      become: true
      become_user: "{{ brew_stat.stat.pw_name }}"
      environment:
        HOMEBREW_NO_AUTO_UPDATE: "True"
    - name: Symlink java
      become: true
      ansible.builtin.file:
        src: "/usr/local/opt/openjdk@17/libexec/openjdk.jdk"
        dest: "/Library/Java/JavaVirtualMachines/openjdk-17.jdk"
        state: link

- name: Create Android SDK directory
  ansible.builtin.file:
    path: "{{ android_sdk_location }}"
    state: directory
    owner: "{{ android_sdk_owner }}"
    group: "{{ android_sdk_group }}"
    mode: "{{ android_sdk_mode }}"

- name: Check that sdkmanager is installed
  ansible.builtin.stat:
    path: "{{ android_sdk_location }}/cmdline-tools/latest/bin/sdkmanager"
  register: sdkmanager_installed

- name: Install Android command line tools
  when: not sdkmanager_installed.stat.exists
  block:
    - name: Create Android SDK dir structure
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: "{{ item.state }}"
      owner: "{{ android_sdk_owner }}"
      group: "{{ android_sdk_group }}"
      mode: "{{ android_sdk_mode }}"
      with_items:
        - { path: "{{ android_cmdline_temp_dir }}", state: "directory" }
        - { path: "{{ android_sdk_location }}/cmdline-tools/latest", state: "directory" }

    - name: Download Android command line tools
      ansible.builtin.unarchive:
        src: "{{ commandline_tools_link }}"
        dest: "{{ android_cmdline_temp_dir }}"
        remote_src: true
        owner: "{{ android_sdk_owner }}"
        group: "{{ android_sdk_group }}"
        mode: "{{ android_sdk_mode }}"
        creates: "{{ android_cmdline_temp_dir }}/cmdline-tools"

    - name: Fix directory structure
      ansible.builtin.copy:
        src: "{{ android_cmdline_temp_dir }}/cmdline-tools/"
        dest: "{{ android_sdk_location }}/cmdline-tools/latest"
        remote_src: true
        owner: "{{ android_sdk_owner }}"
        group: "{{ android_sdk_group }}"
        mode: "{{ android_sdk_mode }}"
